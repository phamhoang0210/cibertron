image: registry.edumall.io/sys/reza-image:latest

variables:
  PUBLIC_DOMAIN: edumall.io

before_script:
  - source reza-env

stages:
  - build
  - test
  - package
  - review
  - staging
  - canary
  - production
  - cleanup

build:
  stage: build
  script:
    - reza-tool decrypt -k ~/.reza/ci.pem -p reza ./config/authservice_jwt.pub.encrypted > ./config/authservice_jwt.pub
    - reza-tool decrypt -k ~/.reza/ci.pem -p reza ./.ssh/id_rsa.pub.encrypted > ./.ssh/id_rsa.pub
    - git clone https://git.edumall.io/backend/minerva_frontend.git /home/minerva_frontend
    - git clone https://git.edumall.io/backend/nami_frontend.git /home/nami_frontend
    - build_image
  only:
    - branches

functional_test:
  stage: test
  script:
    - (docker run -i --rm -d -e MYSQL_DATABASE=gaia_test -e MYSQL_USER=gaia_test -e MYSQL_PASSWORD=gaia_test -e MYSQL_ROOT_PASSWORD=gaia_test --name "mysql-$CI_JOB_ID" mysql:latest &&
      sleep 10 &&
      docker run -i --rm -e RAILS_ENV=test --name "$CI_JOB_ID-migration" --link "mysql-$CI_JOB_ID":mysql -d "$CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG" /bin/sh -c "rails db:migrate" &&
      docker run -i --rm -w="/home/rails/gaia" -e RAILS_ENV=test --link "mysql-$CI_JOB_ID":mysql --name "test-$CI_JOB_ID" "$CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG" /bin/sh -c "bundle exec rake test" &&
      docker rm -f "mysql-$CI_JOB_ID") ||
      (docker rm -f "mysql-$CI_JOB_ID" && exit 1)
  only:
    - branches

package:
  stage: package
  script:
    - registry_login
    - push_image
  only:
    - branches

review:
  stage: review
  script:
    - deploy review 1
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_PROJECT_PATH_SLUG-$CI_ENVIRONMENT_SLUG.$PUBLIC_DOMAIN
    on_stop: stop_review
  only:
    - branches
  except:
    - master
    - develop
    - /^release-.*$/
    - /^hotfix-.*$/

stop_review:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - delete review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    - master
    - develop
    - /^release-.*$/
    - /^hotfix-.*$/

staging:
  stage: staging
  script:
    - deploy staging 1
  environment:
    name: staging
    url: http://$CI_PROJECT_NAME-staging.$PUBLIC_DOMAIN
    on_stop: stop_staging
  only:
    - develop@tcs/gaia

stop_staging:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - delete staging
  environment:
    name: staging
    action: stop
  when: manual
  only:
    - develop@tcs/gaia

canary:
  stage: canary
  script:
    - deploy canary 1
  environment:
    name: canary
    url: http://$CI_PROJECT_NAME.$PUBLIC_DOMAIN
  only:
    - master@tcs/gaia

stop_canary:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - delete canary
  environment:
    name: canary
    action: stop
  when: manual
  only:
    - master@tcs/gaia

production:
  stage: production
  script:
    - deploy production 3
    - delete canary
  environment:
    name: production
    url: https://apps.edumall.io
  when: manual
  only:
    - master@tcs/gaia

cleanup:
  stage: cleanup
  script:
    - remove_image
  allow_failure: true
  when: manual