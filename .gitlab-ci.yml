image: registry.edumall.io/sys/reza-image:new_namespaces_v2

variables:
  PUBLIC_DOMAIN: edumall.io

before_script:
  - source reza-env

stages:
  - build
  - test
  - package
  - staging
  - production
  - cleanup
  - monitor

build:
  stage: build
  script:
    - reza-tool decrypt -k ~/.reza/ci.pem -p reza ./config/authservice_jwt.pub.encrypted > ./config/authservice_jwt.pub
    - reza-tool decrypt -k ~/.reza/ci.pem -p reza ./.ssh/id_rsa.encrypted > ./.ssh/id_rsa
    - build_image web -f Dockerfile .
  only:
    - branches

functional_test:
  stage: test
  script:
    - (until docker run -i --rm -d -e MYSQL_DATABASE=gaia_test -e MYSQL_USER=gaia_test -e MYSQL_PASSWORD=gaia_test -e MYSQL_ROOT_PASSWORD=gaia_test --name "mysql-$CI_JOB_ID" mysql:latest ; do sleep 1; done &&
      docker run -i --rm -e RAILS_ENV=test --name "$CI_JOB_ID-migration" --link "mysql-$CI_JOB_ID":mysql -d "$CI_REGISTRY_IMAGE/web:$CI_REGISTRY_TAG" /bin/sh -c "rails db:migrate && rails test" &&
      docker rm -f "mysql-$CI_JOB_ID") || (docker rm -f "mysql-$CI_JOB_ID" && exit 1)
  only:
    - branches

package:
  stage: package
  script:
    - registry_login
    - push_image web
  only:
    - branches

staging:
  stage: staging
  script:
    - deploy staging web 3
  environment:
    name: staging
    url: http://$CI_PROJECT_NAME-staging.$PUBLIC_DOMAIN
    on_stop: stop_staging
  only:
    - develop@tcs/gaia

stop_staging:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - delete_v2 staging web
  environment:
    name: staging
    action: stop
  when: manual
  only:
    - develop@tcs/gaia

production:
  stage: production
  script:
    - deploy production web 3
  environment:
    name: production
    url: https://apps.edumall.io
  when: manual
  only:
    - master@tcs/gaia

cleanup:
  stage: cleanup
  script:
    - remove_image web
  allow_failure: true
  when: manual

monitor:
  stage: monitor
  script:
    - monitor web
  only:
    - branches
    - tags
  allow_failure: true
  when: manual